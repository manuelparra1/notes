When prompted to create the python file.

Use the provided python code as a starting point that opens a file named `Review_Guide.md` and saves a json version of the file named `Review_Guide.json`.

Provided is the Markdown file structured with sections in specific markdown formatting for Tests, Question Numbers, Question Text, Choice Text (which has `(Correct)` and `(Incorrect)` annotations), Explanation Area, Choice Text Again (without annotations but ends with predictable ":", but not in order a-d like in the questioon text section), choice explanation text.

Each section begins with it's own unique pattern of markdown formatting either at the beginning, end, or both.

The desired output json file has some extra keys that need to be created using logic. For example `"status"` can be used from the question number section since eachquestion number ends with ":Incorrect".

`"user_response"` can be assigned as false for each choice and only true for the choice text that ends with "(Incorrect)" (because these are my incorrect test questions, my choice was then be annotated by the testing software as "(Incorrect)")

`"is_correct"` key for all choices can be all assigned to false, but except for when the choice text ends with "(Correct), then it would be assigned as true"

I provided my current python file as well as one that almost worked.

Remember that what ever source for "choice text" you use either from after the "question text" section or from after the "Explanation" section; Each has it's unique structure and must have different regex used to extract correct information. When extracting question text don't include the "(Incorrect)" or "(Correct)" text. Or the ":" if using the version from the "Explanation" section. If using the "Explanation Section" for extracting "question text" they are not in order so they will have to be sorted, so saving the letter source for each text is necessary.
